[
  {
    "line": 1,
    "elements": [
      {
        "line": 14,
        "name": "Verify if place is being successfully added using AddPlaceAPI",
        "description": "",
        "id": "validating-place-api\u0027s;verify-if-place-is-being-successfully-added-using-addplaceapi;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3392454492,
              "error_message": "java.lang.IllegalStateException: Cannot serialize object because no JSON serializer found in classpath. Please put Jackson (Databind), Gson, Johnzon, or Yasson in the classpath.\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.mapping.ObjectMapping.serialize(ObjectMapping.groovy:164)\r\n\tat io.restassured.internal.mapping.ObjectMapping$serialize.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)\r\n\tat io.restassured.internal.RequestSpecificationImpl.body(RequestSpecificationImpl.groovy:770)\r\n\tat StepDefinations.StepDefination.add_Place_Payload_with(StepDefination.java:33)\r\n\tat âœ½.Given Add Place Payload with \"Akshay Dhewale\"\"Python\"\"Virul\"(PlaceValidations.feature:5)\r\n",
              "status": "failed"
            },
            "line": 5,
            "name": "Add Place Payload with \"Akshay Dhewale\"\"Python\"\"Virul\"",
            "match": {
              "arguments": [
                {
                  "val": "Akshay Dhewale",
                  "offset": 24
                },
                {
                  "val": "Python",
                  "offset": 40
                },
                {
                  "val": "Virul",
                  "offset": 48
                }
              ],
              "location": "StepDefination.add_Place_Payload_with(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "User call \"AddPlaceAPI\" API using \"POST\" http request",
            "match": {
              "arguments": [
                {
                  "val": "AddPlaceAPI",
                  "offset": 11
                },
                {
                  "val": "POST",
                  "offset": 35
                }
              ],
              "location": "StepDefination.user_call_API_using_http_request(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "The API call get success",
            "match": {
              "location": "StepDefination.the_API_call_get_success()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "\"status\" in response is \"OK\"",
            "match": {
              "arguments": [
                {
                  "val": "status",
                  "offset": 1
                },
                {
                  "val": "OK",
                  "offset": 25
                }
              ],
              "location": "StepDefination.in_response_is(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "\"scope\" in response is \"APP\"",
            "match": {
              "arguments": [
                {
                  "val": "scope",
                  "offset": 1
                },
                {
                  "val": "APP",
                  "offset": 24
                }
              ],
              "location": "StepDefination.in_response_is(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "verify place id creating map to \"Akshay Dhewale\" using \"GetPlaceAPI\"",
            "match": {
              "arguments": [
                {
                  "val": "Akshay Dhewale",
                  "offset": 33
                },
                {
                  "val": "GetPlaceAPI",
                  "offset": 56
                }
              ],
              "location": "StepDefination.verify_place_id_creating_map_to_using(String,String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 3,
            "name": "@AddPlace"
          }
        ]
      }
    ],
    "name": "Validating place API\u0027s",
    "description": "",
    "id": "validating-place-api\u0027s",
    "keyword": "Feature",
    "uri": "PlaceValidations.feature"
  }
]